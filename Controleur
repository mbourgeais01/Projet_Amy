package Gabriel.INFO.S2.gui;
import Gabriel.INFO.S2.*; 
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javafx.event.ActionEvent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.input.MouseEvent;
import static javafx.scene.paint.Color.WHITE;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

/**
 *
 * @author francois
 */
public class Controleur {

    public double prixAcier;
    public double prixBois;
    public int nbZD = 0; 
    public int nbTT =0;
    public int nbTr =0;
    
    
    private MainPane vue;

    private int etat;

    private double[] pos1 = new double[4];

    private List<Treillis> selection;

    public Controleur(MainPane vue) {
        this.vue = vue;
        this.selection = new ArrayList<>();
    }

    public void changeEtat(int nouvelEtat) {
         if (nouvelEtat ==10&& nbZD ==0 && nbTr ==0){
            this.vue.getRbZoneDessin().setSelected(true);
            this.selection.clear();
            this.vue.redrawAll();
            nbTr++;
        } else if (nouvelEtat ==11){
            
        }else if (nouvelEtat == 20) {
            this.vue.getRbSelect().setSelected(true);
            this.selection.clear();
            this.vue.redrawAll();
        } else if (nouvelEtat == 30) {
            // creation de points
            this.vue.getRbPoints().setSelected(true);
            this.selection.clear();
          //  this.vue.getbGrouper().setDisable(true);
            this.vue.redrawAll();
        }else if (nouvelEtat == 60) {
            // creation de triangle étape 1
            this.vue.getRbTriangleTerrain().setSelected(true);
            this.selection.clear();
           // this.vue.getbGrouper().setDisable(true);
            this.vue.redrawAll();
        } else if (nouvelEtat == 61) {
            // creation de trianlge étape 2
        }else if (nouvelEtat == 62) {
            // creation de trianlge étape 3
        }else if (nouvelEtat == 70) {
            // creation de barre étape 1
            this.vue.getRbBarreEnBois().setSelected(true);
            this.selection.clear();
            this.vue.redrawAll();
         } else if (nouvelEtat == 71) {
            // creation de barre étape 2
        } else if (nouvelEtat == 80) {
            // creation de barre étape 1
            this.vue.getRbBarreEnAcier().setSelected(true);
            this.selection.clear();
            this.vue.redrawAll();
        } else if (nouvelEtat == 81) {
            // creation de barre étape 2
        } else if (nouvelEtat == 90) {
            // creation d'APD
            this.vue.getRbAppuisDouble().setSelected(true);
            this.selection.clear();
            this.vue.redrawAll();
        }else if (nouvelEtat == 100) {
            // creation d'APS
            this.vue.getRbAppuisSimple().setSelected(true);
            this.selection.clear();
            this.vue.redrawAll();
        }
        this.etat = nouvelEtat;
    }
     

    void clicDansZoneDessin(MouseEvent t) {
         if (this.etat ==10 && nbZD ==0){
            this.pos1[0]= t.getX();
            this.pos1[1]= t.getY();
            this.changeEtat(11);
        }else if(this.etat==11){
            double px2 = t.getX();
            double py2 = t.getY();
            this.vue.getModel().add(
                new ZoneDessin(new Point(this.pos1[0], this.pos1[1]),
                        new Point(px2, py2)));
            
            this.vue.redrawAll();
            this.changeEtat(10);
            nbZD++;
        } 
        
        else if (this.etat == 30&& nbTT !=0) {
            double px = t.getX();
            double py = t.getY();
            Groupe model = this.vue.getModel();
            model.add(new Point(px, py));
            this.vue.redrawAll();
        } else if (this.etat == 60 && nbZD !=0) {
            this.pos1[0] = t.getX();
            this.pos1[1] = t.getY();
            this.changeEtat(61);
            
        } else if (this.etat == 61) {
            this.pos1[2] = t.getX();
            this.pos1[3] = t.getY();
            this.changeEtat(62);
            
        } else if (this.etat == 62) {
            double px2 = t.getX();
            double py2 = t.getY();
            TriangleTerrain TT = new TriangleTerrain(new Point(this.pos1[0], this.pos1[1]),new Point(this.pos1[2], this.pos1[3]),
                            new Point(px2, py2));
            
            this.vue.getModel().add(TT);
            this.vue.redrawAll();
            nbTT++;
            this.changeEtat(60);
            
        } else if (this.etat == 70&& nbTT !=0) {
          Point clic = new Point(t.getX(), t.getY());
          Treillis proche = this.vue.getModel().plusProche(clic, Double.MAX_VALUE);
          Point eval = (Point) proche;
          double Px1 = eval.getPx();
          double Py1 = eval.getPy();
          this.pos1[0] = Px1;
          this.pos1[1] = Py1;
          this.changeEtat(71);
          
        } else if (this.etat == 71) {
            Point clic = new Point(t.getX(), t.getY());
            Treillis proche = this.vue.getModel().plusProche(clic, Double.MAX_VALUE);
            Point eval = (Point) proche;
            double px2 = eval.getPx();
            double py2 = eval.getPy();
            this.vue.getModel().add(
                new BarreBois(new Point(this.pos1[0], this.pos1[1]),
                            new Point(px2, py2)));
            this.vue.redrawAll();
            prixBois = prixBois + 50*(Math.sqrt((this.pos1[0]-px2)*(this.pos1[0]-px2)
                +(this.pos1[1]-py2)*(this.pos1[1]-py2)))/(250/15);
            this.changeEtat(70);
            
        } else if (this.etat == 80&& nbTT !=0) {
            Point clic2 = new Point(t.getX(), t.getY());
            Treillis proche = this.vue.getModel().plusProche(clic2, Double.MAX_VALUE);
            Point eval = (Point) proche;
            double Px1 = eval.getPx();
            double Py1 = eval.getPy();
            this.pos1[0] = Px1;
            this.pos1[1] = Py1;
            this.changeEtat(81);
        
        } else if (this.etat == 81) {
            Point clic2 = new Point(t.getX(), t.getY());
            Treillis proche = this.vue.getModel().plusProche(clic2, Double.MAX_VALUE);
            Point eval = (Point) proche;
            double px2 = eval.getPx();
            double py2 = eval.getPy();
            this.vue.getModel().add(
                new BarreAcier(new Point(this.pos1[0], this.pos1[1]),
                        new Point(px2, py2)));
            this.vue.redrawAll();
            prixAcier = prixAcier + 75*(Math.sqrt((this.pos1[0]-px2)*(this.pos1[0]-px2)
                +(this.pos1[1]-py2)*(this.pos1[1]-py2)))/(250/15);
            this.changeEtat(80);
            
        } else if (this.etat == 90 && nbTT !=0){ 
                      
            double px = t.getX();
            double py = t.getY();
            
            Groupe model = this.vue.getModel();
            model.add(new Point(px,py,WHITE));
            model.add(new AppuisDouble(px,py));
            this.vue.redrawAll();
            
            
            
        }else if (this.etat == 100 && nbTT !=0 ){
            
            double px = t.getX();
            double py = t.getY();
            Groupe model = this.vue.getModel();
            model.add(new Point(px,py, WHITE));          
            model.add(new AppuisSimple(px,py));
            
            this.vue.redrawAll();
              
        } 
                      
    }

    void boutonSelect(ActionEvent t) {
        this.changeEtat(20);
    }

    void boutonPoints(ActionEvent t) {
        this.changeEtat(30);
    }
    void boutonTriangleTerrain (ActionEvent t){
        this.changeEtat(60);
    }
    void boutonBarreEnBois (ActionEvent t){
        this.changeEtat(70);
    }
    void boutonBarreEnAcier (ActionEvent t){
        this.changeEtat(80);
    }
    void boutonAppuisDouble (ActionEvent t){
        this.changeEtat(90);
    }
    void boutonAppuisSimple (ActionEvent t){
        this.changeEtat(100);
    }
   
    void boutonZoneDessin (ActionEvent t){
        this.changeEtat(10);
    }
    
    /**
     * @return the selection
     */
    public List<Treillis> getSelection() {
        return selection;
    }

    void boutonGrouper(ActionEvent t) {
        if (this.etat == 20 && this.selection.size() > 1) {
            // normalement le bouton est disabled dans le cas contraire
            Groupe ssGroupe = this.vue.getModel().sousGroupe(selection);
            this.selection.clear();
            this.selection.add(ssGroupe);
            this.vue.redrawAll();
        }
    }
    void boutonPrix(ActionEvent t) {
        System.out.println("Le prix est : " + (prixBois + prixAcier)+" €");
    }
    void boutonTreillis(ActionEvent t){
        if(nbTr ==0) {
            
        //points zoneDessin
        Point p0 = new Point(70,40);
        Point p1 = new Point(500,500);
        //points triangleTerrain 1
        Point p2 = new Point(90,490);
        Point p3 = new Point(90,430);
        Point p4 = new Point(180,430);
        //points triangleTerrain 2
        Point p5 = new Point(380,430);
        Point p6 = new Point(470,430);
        Point p7 = new Point(470,490);
        //points AppuisD/S
        Point p8 = new Point(135,430);
        Point p9 = new Point(425,430);
        //points barres B/A
        Point p10 = new Point(207.5,340);
        Point p11 = new Point(280,430);
        Point p12 = new Point(352.5,340);
        
        //creation des différents éléments
        ZoneDessin ZD = new ZoneDessin(p0,p1);
        TriangleTerrain TT1 = new TriangleTerrain(p2,p3,p4);
        TriangleTerrain TT2 = new TriangleTerrain(p5,p6,p7);
        AppuisSimple AS = new AppuisSimple(135,430);
        AppuisDouble AD = new AppuisDouble(425,430);
        BarreBois BB1 = new BarreBois(p10,p11);
        BarreBois BB2 = new BarreBois(p11,p12);
        BarreBois BB3 = new BarreBois(p10,p12);
        BarreAcier BA1 = new BarreAcier(p8,p10);
        BarreAcier BA2 = new BarreAcier(p9,p12);
        
        prixBois = (50*(250/15))*BB1.getLong()+(50*(250/15))*BB2.getLong()+(50*(250/15))*BB3.getLong();
        prixAcier = (75*(250/15))*BA1.getLong()+(75*(250/15))*BA2.getLong();
        
        this.vue.getModel().add(ZD);
        this.vue.getModel().add(TT1);
        this.vue.getModel().add(TT2);
        this.vue.getModel().add(p10);
        this.vue.getModel().add(p11);
        this.vue.getModel().add(p12);
        this.vue.getModel().add(AS);
        this.vue.getModel().add(AD);
        this.vue.getModel().add(BB1);
        this.vue.getModel().add(BB2);
        this.vue.getModel().add(BB3);
        this.vue.getModel().add(BA1);
        this.vue.getModel().add(BA2);
        
            this.vue.redrawAll();
        nbTr++;
      }  
    }

    void realSave(File f) {
        try {
            this.vue.getModel().sauvegarde(f);
            this.vue.setCurFile(f);
            this.vue.getInStage().setTitle(f.getName());
        } catch (IOException ex) {
            Alert alert = new Alert(AlertType.ERROR);
            alert.setTitle("Erreur");
            alert.setHeaderText("Problème durant la sauvegarde");
            alert.setContentText(ex.getLocalizedMessage());

            alert.showAndWait();
        } finally {
            this.changeEtat(20);
        }
    }

    void menuSave(ActionEvent t) {
        if (this.vue.getCurFile() == null) {
            this.menuSaveAs(t);
        } else {
            this.realSave(this.vue.getCurFile());
        }
    }

    void menuSaveAs(ActionEvent t) {
        FileChooser chooser = new FileChooser();
        File f = chooser.showSaveDialog(this.vue.getInStage());
        if (f != null) {
            this.realSave(f);
        }
    }

    void menuOpen(ActionEvent t) {
        FileChooser chooser = new FileChooser();
        File f = chooser.showOpenDialog(this.vue.getInStage());
        if (f != null) {
            try {
                Treillis lue = Treillis.lecture(f);
                Groupe glu = (Groupe) lue;
                Stage nouveau = new Stage();
                nouveau.setTitle(f.getName());
                Scene sc = new Scene(new MainPane(nouveau, f, glu), 800, 600);
                nouveau.setScene(sc);
                nouveau.show();
            } catch (Exception ex) {
                Alert alert = new Alert(AlertType.ERROR);
                alert.setTitle("Erreur");
                alert.setHeaderText("Problème durant la sauvegarde");
                alert.setContentText(ex.getLocalizedMessage());

                alert.showAndWait();
            } finally {
                this.changeEtat(20);
            }
        }
    }


    void menuNouveau(ActionEvent t) {
        Stage nouveau = new Stage();
        nouveau.setTitle("Nouveau");
        Scene sc = new Scene(new MainPane(nouveau), 800, 600);
        nouveau.setScene(sc);
        nouveau.show();
    }

    void menuApropos(ActionEvent t) {
        Alert alert = new Alert(AlertType.INFORMATION);
        alert.setTitle("A propos");
        alert.setHeaderText(null);
        alert.setContentText("Projet treillis");

        alert.showAndWait();
    }

}
