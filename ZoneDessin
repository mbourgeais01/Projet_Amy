package Gabriel.INFO.S2;
import java.io.IOException;
import java.io.Writer;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.paint.Color;
import static javafx.scene.paint.Color.BLACK;
/**
 *
 * @author Utilisateur
 */
public class ZoneDessin extends Treillis {
    private Point S1;
    private Point S2;
    
    
    public ZoneDessin(Point S1, Point S2, Color couleur) {
        //super(couleur);
        this.S1 = S1;
        this.S2 = S2;
        
    }
    
    public ZoneDessin(Point S1, Point S2) {
        this(S1, S2, Color.BLACK);
    }

    @Override
    public double maxX() {
         return  Math.max(this.S1.maxX(), this.S2.maxX());
    }

    @Override
    public double minX() {
        return  Math.min(this.S1.minX(), this.S2.minX());
    }

    @Override
    public double maxY() {
        return  Math.max(this.S1.maxY(), this.S2.maxY());
    }

    @Override
    public double minY() {
        return  Math.min(this.S1.minY(), this.S2.minY());
  }

    @Override
    public double distancePoint(Point p) {
        double x1 = this.S1.getPx();
        double y1 = this.S1.getPy();
        double x2 = this.S2.getPx();
        double y2 = this.S2.getPy();
        double x3 = p.getPx();
        double y3 = p.getPy();
        double up = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1))
                / (Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        if (up < 0) {
            return this.S1.distancePoint(p);
        } else if (up > 1) {
            return this.S2.distancePoint(p);
        } else {
            Point p4 = new Point(x1 + up * (x2 - x1),
                    y1 + up * (y2 - y1));
            return p4.distancePoint(p);
        }
    }

    @Override
    public void dessine(GraphicsContext context) {
        context.setStroke(BLACK);
        context.strokePolygon(new double[]{this.S1.getPx(), this.S2.getPx(), this.S2.getPx(), this.S1.getPx()},
               new double[]{this.S1.getPy(), this.S1.getPy(), this.S2.getPy(),this.S2.getPy()}, 4);
    }

    @Override
    public void save(Writer w, Numeroteur<Treillis> num) throws IOException {
        if (!num.objExist(this)) {
            int id = num.creeID(this);
            this.S1.save(w, num);
            this.S2.save(w, num);
            w.append("ZoneConstructible;" + id + ";" +
                    num.getID(this.S1) + ";" + num.getID(this.S2) +
                     "\n");
        } 
    }


}
